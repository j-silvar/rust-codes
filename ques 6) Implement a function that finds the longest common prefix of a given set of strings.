fn longest_common_prefix(strings: &[String]) -> String {
    if strings.is_empty() {
        return String::new();
    }

    let mut result = String::new();

    for (i, ch) in strings[0].chars().enumerate() {
        for string in strings.iter().skip(1) {
            if let Some(c) = string.chars().nth(i) {
                if c != ch {
                    return result;
                }
            } else {
                return result;
            }
        }
        result.push(ch);
    }

    result
}

fn main() {
    let strings = vec![
        String::from("flower"),
        String::from("flow"),
        String::from("flight"),
    ];
    let prefix = longest_common_prefix(&strings);
    println!("Longest common prefix: {}", prefix);
}
